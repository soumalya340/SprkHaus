/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Poap, PoapInterface } from "../Poap";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "poapName",
        type: "string",
      },
      {
        internalType: "string",
        name: "poapSymbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ConfirmationAddressMismatch",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "partyA",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "partyB",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "attestationId",
        type: "uint64",
      },
    ],
    name: "PoapMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "partyB",
        type: "address",
      },
    ],
    name: "claimMetIRL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "partyA",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "confirmMetIRL",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "partyA",
        type: "address",
      },
    ],
    name: "metIRLMapping",
    outputs: [
      {
        internalType: "address",
        name: "partyB",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "schemaId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "instance",
        type: "address",
      },
    ],
    name: "setSPInstance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "schemaId_",
        type: "uint64",
      },
    ],
    name: "setSchemaID",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spInstance",
    outputs: [
      {
        internalType: "contract ISP",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600c553480156200001657600080fd5b506040516200234f3803806200234f833981016040819052620000399162000183565b818162000046336200006e565b60016200005483826200027c565b5060026200006382826200027c565b505050505062000348565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000e657600080fd5b81516001600160401b0380821115620001035762000103620000be565b604051601f8301601f19908116603f011681019082821181831017156200012e576200012e620000be565b816040528381526020925086838588010111156200014b57600080fd5b600091505b838210156200016f578582018301518183018401529082019062000150565b600093810190920192909252949350505050565b600080604083850312156200019757600080fd5b82516001600160401b0380821115620001af57600080fd5b620001bd86838701620000d4565b93506020850151915080821115620001d457600080fd5b50620001e385828601620000d4565b9150509250929050565b600181811c908216806200020257607f821691505b6020821081036200022357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200027757600081815260208120601f850160051c81016020861015620002525750805b601f850160051c820191505b8181101562000273578281556001016200025e565b5050505b505050565b81516001600160401b03811115620002985762000298620000be565b620002b081620002a98454620001ed565b8462000229565b602080601f831160018114620002e85760008415620002cf5750858301515b600019600386901b1c1916600185901b17855562000273565b600085815260208120601f198616915b828110156200031957888601518255948401946001909101908401620002f8565b5085821015620003385787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611ff780620003586000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c806370a08231116100f9578063a8c5dc3311610097578063bc3afdbc11610071578063bc3afdbc146103d0578063c87b56dd14610402578063e985e9c514610415578063f2fde38b1461045157600080fd5b8063a8c5dc3314610381578063b8662b2314610394578063b88d4fde146103bd57600080fd5b80638da5cb5b116100d35780638da5cb5b146103425780638e9d660f1461035357806395d89b4114610366578063a22cb4651461036e57600080fd5b806370a08231146102ea578063715018a6146102fd57806371eeeb451461030557600080fd5b806318160ddd1161016657806342842e0e1161014057806342842e0e146102a85780634f6ccce7146102bb57806361bc221a146102ce5780636352211e146102d757600080fd5b806318160ddd1461027057806323b872dd146102825780632f745c591461029557600080fd5b806301ffc9a7146101ae57806305ca8ee3146101d657806306fdde03146101eb578063075b1a0914610200578063081812fc14610232578063095ea7b31461025d575b600080fd5b6101c16101bc3660046118be565b610464565b60405190151581526020015b60405180910390f35b6101e96101e43660046118f0565b61048f565b005b6101f36104c4565b6040516101cd919061195d565b600b5461021a90600160a01b90046001600160401b031681565b6040516001600160401b0390911681526020016101cd565b610245610240366004611970565b610556565b6040516001600160a01b0390911681526020016101cd565b6101e961026b3660046119a5565b61057d565b6009545b6040519081526020016101cd565b6101e96102903660046119cf565b610697565b6102746102a33660046119a5565b6106c8565b6101e96102b63660046119cf565b61075e565b6102746102c9366004611970565b610779565b610274600c5481565b6102456102e5366004611970565b61080c565b6102746102f8366004611a0b565b61086c565b6101e96108f2565b6101e9610313366004611a0b565b336000908152600d6020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b0316610245565b6101e9610361366004611a0b565b610906565b6101f3610930565b6101e961037c366004611a26565b61093f565b600b54610245906001600160a01b031681565b6102456103a2366004611a0b565b600d602052600090815260409020546001600160a01b031681565b6101e96103cb366004611b04565b61094e565b6103e36103de366004611b6b565b610986565b604080516001600160401b0390931683526020830191909152016101cd565b6101f3610410366004611970565b610bee565b6101c1610423366004611bb8565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6101e961045f366004611a0b565b610c62565b60006001600160e01b0319821663780e9d6360e01b1480610489575061048982610cdb565b92915050565b610497610d2b565b600b80546001600160401b03909216600160a01b0267ffffffffffffffff60a01b19909216919091179055565b6060600180546104d390611beb565b80601f01602080910402602001604051908101604052809291908181526020018280546104ff90611beb565b801561054c5780601f106105215761010080835404028352916020019161054c565b820191906000526020600020905b81548152906001019060200180831161052f57829003601f168201915b5050505050905090565b600061056182610d85565b506000908152600560205260409020546001600160a01b031690565b60006105888261080c565b9050806001600160a01b0316836001600160a01b0316036105fa5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061061657506106168133610423565b6106885760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016105f1565b6106928383610de4565b505050565b6106a13382610e52565b6106bd5760405162461bcd60e51b81526004016105f190611c25565b610692838383610ed1565b60006106d38361086c565b82106107355760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016105f1565b506001600160a01b03919091166000908152600760209081526040808320938352929052205490565b6106928383836040518060200160405280600081525061094e565b600061078460095490565b82106107e75760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016105f1565b600982815481106107fa576107fa611c72565b90600052602060002001549050919050565b6000818152600360205260408120546001600160a01b0316806104895760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105f1565b60006001600160a01b0382166108d65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016105f1565b506001600160a01b031660009081526004602052604090205490565b6108fa610d2b565b6109046000611042565b565b61090e610d2b565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600280546104d390611beb565b61094a338383611092565b5050565b6109583383610e52565b6109745760405162461bcd60e51b81526004016105f190611c25565b61098084848484611160565b50505050565b6001600160a01b038281166000908152600d602052604081205490918291339116819003610bce5760408051600280825260608201909252600091816020015b60608152602001906001900390816109c657905050604080516001600160a01b03891660208201529192500160405160208183030381529060405281600081518110610a1457610a14611c72565b602002602001018190525081604051602001610a3f91906001600160a01b0391909116815260200190565b60405160208183030381529060405281600181518110610a6157610a61611c72565b6020908102919091018101919091526040805161014081018252600b546001600160401b03600160a01b820416825260009382018490528183018490526060820184905230608083015260a0820184905260c0820184905260e0820184905261010082018590526101208201899052915163b82916cb60e01b81529092916001600160a01b03169063b82916cb90610afd908590600401611cfc565b6020604051808303816000875af1158015610b1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b409190611e2c565b600c80549192506000919082610b5583611e5f565b90915550905080610b663382611193565b604080518281526001600160a01b038c811660208301528816818301526001600160401b038516606082015290517f30f94fd8dbefabbfc62064853a73a8b93a8b931f4352a93fb8cb35f4e4a1e6669181900360800190a1919650909450610be79350505050565b60405163e481626b60e01b815260040160405180910390fd5b9250929050565b6060610bf982610d85565b6000610c1060408051602081019091526000815290565b90506000815111610c305760405180602001604052806000815250610c5b565b80610c3a846111ad565b604051602001610c4b929190611e78565b6040516020818303038152906040525b9392505050565b610c6a610d2b565b6001600160a01b038116610ccf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105f1565b610cd881611042565b50565b60006001600160e01b031982166380ac58cd60e01b1480610d0c57506001600160e01b03198216635b5e139f60e01b145b8061048957506301ffc9a760e01b6001600160e01b0319831614610489565b6000546001600160a01b031633146109045760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105f1565b6000818152600360205260409020546001600160a01b0316610cd85760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105f1565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610e198261080c565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610e5e8361080c565b9050806001600160a01b0316846001600160a01b03161480610ea557506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b80610ec95750836001600160a01b0316610ebe84610556565b6001600160a01b0316145b949350505050565b826001600160a01b0316610ee48261080c565b6001600160a01b031614610f0a5760405162461bcd60e51b81526004016105f190611ea7565b6001600160a01b038216610f6c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105f1565b610f79838383600161123f565b826001600160a01b0316610f8c8261080c565b6001600160a01b031614610fb25760405162461bcd60e51b81526004016105f190611ea7565b600081815260056020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260048552838620805460001901905590871680865283862080546001019055868652600390945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b0316036110f35760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105f1565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61116b848484610ed1565b61117784848484611373565b6109805760405162461bcd60e51b81526004016105f190611eec565b61094a828260405180602001604052806000815250611474565b606060006111ba836114a7565b60010190506000816001600160401b038111156111d9576111d9611a62565b6040519080825280601f01601f191660200182016040528015611203576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461120d57509392505050565b60018111156112ae5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b60648201526084016105f1565b816001600160a01b03851661130a5761130581600980546000838152600a60205260408120829055600182018355919091527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b61132d565b836001600160a01b0316856001600160a01b03161461132d5761132d858261157f565b6001600160a01b038416611349576113448161161c565b61136c565b846001600160a01b0316846001600160a01b03161461136c5761136c84826116cb565b5050505050565b60006001600160a01b0384163b1561146957604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906113b7903390899088908890600401611f3e565b6020604051808303816000875af19250505080156113f2575060408051601f3d908101601f191682019092526113ef91810190611f7b565b60015b61144f573d808015611420576040519150601f19603f3d011682016040523d82523d6000602084013e611425565b606091505b5080516000036114475760405162461bcd60e51b81526004016105f190611eec565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ec9565b506001949350505050565b61147e838361170f565b61148b6000848484611373565b6106925760405162461bcd60e51b81526004016105f190611eec565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106114e65772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611512576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061153057662386f26fc10000830492506010015b6305f5e1008310611548576305f5e100830492506008015b612710831061155c57612710830492506004015b6064831061156e576064830492506002015b600a83106104895760010192915050565b6000600161158c8461086c565b6115969190611f98565b6000838152600860205260409020549091508082146115e9576001600160a01b03841660009081526007602090815260408083208584528252808320548484528184208190558352600890915290208190555b5060009182526008602090815260408084208490556001600160a01b039094168352600781528383209183525290812055565b60095460009061162e90600190611f98565b6000838152600a60205260408120546009805493945090928490811061165657611656611c72565b90600052602060002001549050806009838154811061167757611677611c72565b6000918252602080832090910192909255828152600a909152604080822084905585825281205560098054806116af576116af611fab565b6001900381819060005260206000200160009055905550505050565b60006116d68361086c565b6001600160a01b039093166000908152600760209081526040808320868452825280832085905593825260089052919091209190915550565b6001600160a01b0382166117655760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105f1565b6000818152600360205260409020546001600160a01b0316156117ca5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105f1565b6117d860008383600161123f565b6000818152600360205260409020546001600160a01b03161561183d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105f1565b6001600160a01b038216600081815260046020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610cd857600080fd5b6000602082840312156118d057600080fd5b8135610c5b816118a8565b6001600160401b0381168114610cd857600080fd5b60006020828403121561190257600080fd5b8135610c5b816118db565b60005b83811015611928578181015183820152602001611910565b50506000910152565b6000815180845261194981602086016020860161190d565b601f01601f19169290920160200192915050565b602081526000610c5b6020830184611931565b60006020828403121561198257600080fd5b5035919050565b80356001600160a01b03811681146119a057600080fd5b919050565b600080604083850312156119b857600080fd5b6119c183611989565b946020939093013593505050565b6000806000606084860312156119e457600080fd5b6119ed84611989565b92506119fb60208501611989565b9150604084013590509250925092565b600060208284031215611a1d57600080fd5b610c5b82611989565b60008060408385031215611a3957600080fd5b611a4283611989565b915060208301358015158114611a5757600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611a8957600080fd5b81356001600160401b0380821115611aa357611aa3611a62565b604051601f8301601f19908116603f01168101908282118183101715611acb57611acb611a62565b81604052838152866020858801011115611ae457600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215611b1a57600080fd5b611b2385611989565b9350611b3160208601611989565b92506040850135915060608501356001600160401b03811115611b5357600080fd5b611b5f87828801611a78565b91505092959194509250565b60008060408385031215611b7e57600080fd5b611b8783611989565b915060208301356001600160401b03811115611ba257600080fd5b611bae85828601611a78565b9150509250929050565b60008060408385031215611bcb57600080fd5b611bd483611989565b9150611be260208401611989565b90509250929050565b600181811c90821680611bff57607f821691505b602082108103611c1f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b60048110611ca657634e487b7160e01b600052602160045260246000fd5b9052565b6000815180845260208085019450848260051b860182860160005b85811015611cef578383038952611cdd838351611931565b98850198925090840190600101611cc5565b5090979650505050505050565b60808152611d166080820183516001600160401b03169052565b60006020830151611d3260a08401826001600160401b03169052565b5060408301516001600160401b0390811660c084015260608401511660e083015260808301516001600160a01b0381166101008085019190915260a08501519150610120611d8a818601846001600160401b03169052565b60c08601519250610140611da081870185611c88565b60e08701511515610160870152828701516101808701919091529250611dca6101c0860184611caa565b90860151858203607f19016101a08701529092509050611dea8282611931565b9150508281036020840152611e03816000815260200190565b838103604085015260008152905060208101838103606085015260008152905060208101610ec9565b600060208284031215611e3e57600080fd5b8151610c5b816118db565b634e487b7160e01b600052601160045260246000fd5b600060018201611e7157611e71611e49565b5060010190565b60008351611e8a81846020880161190d565b835190830190611e9e81836020880161190d565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611f7190830184611931565b9695505050505050565b600060208284031215611f8d57600080fd5b8151610c5b816118a8565b8181038181111561048957610489611e49565b634e487b7160e01b600052603160045260246000fdfea26469706673582212203919f69e1cad5b8f8ac99dac12c06706687f407008ab49005a0f6f729b5cbdde64736f6c63430008140033";

type PoapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PoapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Poap__factory extends ContractFactory {
  constructor(...args: PoapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Poap";
  }

  deploy(
    poapName: string,
    poapSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Poap> {
    return super.deploy(poapName, poapSymbol, overrides || {}) as Promise<Poap>;
  }
  getDeployTransaction(
    poapName: string,
    poapSymbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(poapName, poapSymbol, overrides || {});
  }
  attach(address: string): Poap {
    return super.attach(address) as Poap;
  }
  connect(signer: Signer): Poap__factory {
    return super.connect(signer) as Poap__factory;
  }
  static readonly contractName: "Poap";
  public readonly contractName: "Poap";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoapInterface {
    return new utils.Interface(_abi) as PoapInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Poap {
    return new Contract(address, _abi, signerOrProvider) as Poap;
  }
}
